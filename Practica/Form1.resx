<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        uOs/ub7q0Aq8nsqHokh6SaBSQBn/2Q==
</value>
  </data>
</root>